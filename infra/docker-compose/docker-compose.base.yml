version: '2.4'

services:

  backend:
    image: ${REPO}/backend.isotope.seanmorr.is:${TAG}
    build:
      context: ../../
      dockerfile: infra/docker/backend.Dockerfile
    env_file:
        - ../../.env
    restart: always

  frontend:
    image: r.cfcr.io/seanmorris/is.seanmorr.thruput.proxy:latest
    restart: always
    volumes:
      - ../../data/global/thruput/;.json:/app/data/local/sites/;.json
      - ../../.idilicProfile.json:/app/.idilicProfile.json
      - ../../temporary/proxy:/app/temporary/

  cache-warmer:
    image: r.cfcr.io/seanmorris/is.seanmorr.thruput.queue:latest
    restart: always
    volumes:
      - ../../data/global/thruput/;.json:/app/data/local/sites/;.json
      - ../../.idilicProfile.json:/app/.idilicProfile.json
      - ../../temporary/proxy:/app/temporary/
    command: ["idilic", "-vv", "SeanMorris/ThruPut", "warmDaemon"]

  socket:
    image: ${REPO}/socket.isotope.seanmorr.is:${TAG}
    build:
      context: ../../
      dockerfile: infra/docker/socket.Dockerfile
    env_file:
        - ../../.env
    restart: always

  load-balancer:
    image: ${REPO}/load-balancer.isotope.seanmorr.is:${TAG}
    build:
      context: ../../
      dockerfile: infra/docker/load-balancer.Dockerfile
    env_file:
        - ../../.env
    restart: always

  worker:
    image: ${REPO}/worker.isotope.seanmorr.is:${TAG}
    build:
      context: ../../
      dockerfile: infra/docker/worker.Dockerfile
    env_file:
      - ../../.env
    restart: on-failure

  watcher:
    image: "${REPO}/watcher.isotope.seanmorr.is:${TAG}"
    build:
      context: ../../
      dockerfile: infra/docker/watcher.Dockerfile
      target: development
    env_file:
        - ../../.env
    restart: always
    ports:
      - "9485:9485"
    volumes:
      - ../../:/app

  task:
    image: "${REPO}/task.isotope.seanmorr.is:${TAG}"
    build:
      target: development
      context: ../../
      dockerfile: infra/docker/worker.Dockerfile
    env_file:
        - ../../.env
    restart: "no"
    volumes:
      - ../../:/app

  updater:
    image: "${REPO}/updater.isotope.seanmorr.is:${TAG}"
    build:
      context: ../../
      dockerfile: infra/docker/updater.Dockerfile
    env_file:
        - ../../.env
    restart: on-failure

  compose:
    build:
      context: ../../
      dockerfile: infra/docker/compose.Dockerfile
      target: development
    image: "${REPO}/compose.isotope.seanmorr.is:${TAG}"
    env_file:
        - ../../.env
    restart: on-failure
    volumes:
      - ../../:/app
      - ../../data/local/composer/:/root/.composer/

  database:
    image: mariadb:10.4.8-bionic
    restart: always
    ports:
      - "9996:3306"
    volumes:
      - schema.isotope.seanmorr.is:/var/lib/mysql
    env_file:
        - ../../.env
    environment:
      MYSQL_ROOT_PASSWORD: 'supersecret'
      MYSQL_USER: 'isotope'
      MYSQL_PASSWORD: 'iso_secret'
      MYSQL_DATABASE: 'isotope'
    command: ['mysqld', '--character-set-server=utf8mb4']

  rabbit:
    image: ${REPO}/rabbit.isotope.seanmorr.is:${TAG}
    build:
      context: ../../
      dockerfile: infra/docker/rabbit.Dockerfile
    env_file:
        - ../../.env
    restart: always
    environment:
      RABBITMQ_ERLANG_COOKIE: "O234234QALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "5672:5672"
    labels:
      NAME: "rabbitmq1"
      
  redis:
    image: redis:5.0
    restart: always
    ports:
      - "6379:6379"

volumes:
  schema.isotope.seanmorr.is:
    driver: "local"

  # jenkins:
  #   image: ${REPO}/seanmorris/isotope-jenkins:master
  #   restart: always
  #   ports:
  #     - "9995:8080"
  #   volumes:
  #     - jenkins:/var/jenkins_home
